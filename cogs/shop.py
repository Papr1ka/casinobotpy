from discord.embeds import EmptyEmbed
from discord.ext.commands import Cog, command, has_permissions, guild_only
from discord import Embed
from discord.colour import Colour
from math import ceil
from discord_components import DiscordComponents, component

from database import db
from main import on_command
from models.paginator import Paginator
from models.errors import CommandCanceled


class Shop(Cog):
    def __init__(self, Bot):
        self.Bot = Bot

    @command(
        usage="`=shop`",
        help="–ú–∞–≥–∞–∑–∏–Ω –≤–∞—à–µ–π –≥–∏–ª—å–¥–∏–∏, –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç–≤–µ—á–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"
    )
    @guild_only()
    async def shop(self, ctx):
        await on_command(self.Bot.get_command('shop'))
        shop = await db.fetch_user(ctx.guild.id, ctx.guild.id, items=1)
        shop = shop['items']
        embed = Embed(title='–ú–∞–≥–∞–∑–∏–Ω', color=Colour.dark_theme())
        
        if not shop:
            embed.description = "–í –º–∞–≥–∞–∑–∏–Ω–µ –≤–∞—à–µ–π –≥–∏–ª—å–¥–∏–∏ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!"
            await ctx.send(embed=embed)
        else:
            l = len(shop)
            
            embeds = [Embed(title='–ú–∞–≥–∞–∑–∏–Ω', color=Colour.dark_theme()) for i in range(ceil(l / 5))]
            
            for i in range(l):
                embeds[i // 5].add_field(name = "üí∏ " + str(shop[i]['cost']) + '$   |  ' + shop[i]['name'], value=shop[i]['description'], inline=False)

            c_id = str(ctx.message.id)
            
            p = Paginator(DiscordComponents(self.Bot), ctx.channel, embeds, author=ctx.author, id=c_id + "pagi")
            response, inter, msg = await p.start()
            if response == "–û—Ç–º–µ–Ω–∏—Ç—å":
                await msg.delete()
                return
            
            print(response)
            response = response.split('|')[1][2:]
            print(response)
            
            items = await db.fetch_user(ctx.guild.id, ctx.guild.id, items=1)
            items = items['items']
            match = False
            for i in items:
                print(i['name'], response)
                if i['name'] == response:
                    match = True
                    break
            if match:
                embed = Embed(title=i['name'], color=Colour.dark_theme())
                embed.add_field(name='–¶–µ–Ω–∞', value=f"{i['cost']}$", inline=False)
                embed.add_field(name='–û–ø–∏—Å–∞–Ω–∏–µ', value=i['description'], inline=False)
                roles = [ctx.guild.get_role(role) for role in i['roles']]
                if not roles:
                    embed.add_field(name='–†–æ–ª–∏', value='–Ω–µ—Ç', inline=False)
                else:
                    embed.add_field(name='–†–æ–ª–∏', value=' '.join([role.mention for role in roles]), inline=False)
                await inter.edit_origin(embed=embed, components=[component.Button(style=component.ButtonStyle.blue, label="–ö—É–ø–∏—Ç—å", custom_id=c_id + "buy_")])
                interaction = await self.Bot.wait_for("button_click", check = lambda i: i.custom_id == c_id + "buy_" and i.user == ctx.author)

                cost = i['cost']
                    
                user_money = await db.fetch_user(ctx.guild.id, ctx.author.id, money=1, inventory=1)
                inventory = user_money['inventory']
                user_money = user_money['money']
                if user_money >= cost:
                    if i not in inventory:
                        embed = Embed(title=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, {i['name']}!", color=Colour.dark_theme())
                        await db.update_user(ctx.guild.id, ctx.author.id, {'$push': {'inventory': i}, '$inc': {'money': -cost}})
                    else:
                        embed = Embed(title=f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä", color=Colour.dark_theme())
                else:
                    embed = Embed(title=f"–ù–µ–¥–æ—Å—Ç–∞—Ç—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤", color=Colour.dark_theme())

                await interaction.edit_origin(embed=embed, components=[])
                
            else:
                embed = Embed(title='–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω', color=Colour.dark_theme())
                await inter.edit_origin(embed=embed, components=[])



    @command(
        usage="`=add_item`",
        help='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω –≥–∏–ª—å–¥–∏–∏. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ —Ç–æ–≤–∞—Ä–∞',
        brief='administrator'
    )
    @guild_only()
    @has_permissions(administrator=True)
    async def add_item(self, ctx):
        await on_command(self.Bot.get_command('add_item'))
        item_opts = {}
        embed = Embed(
            title='–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
            color = Colour.dark_theme()
        )
        embed.set_footer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ | `–æ—Ç–º–µ–Ω–∏—Ç—å` –¥–ª—è –æ—Ç–º–µ–Ω—ã')
        main = await ctx.send(embed=embed)

        def check(m):
            return m.content and m.author.id == ctx.author.id and ctx.guild.id == m.guild.id

        async def get(item_opts, key, place):
            try:
                message = await self.Bot.wait_for('message', check=check, timeout=60)
            except TimeoutError:
                raise CommandCanceled('–ö–æ–º–∞–Ω–¥–∞ —Å–±—Ä–æ—à–µ–Ω–∞')
            else:
                if message.content == '–æ—Ç–º–µ–Ω–∏—Ç—å':
                    raise CommandCanceled('–ö–æ–º–∞–Ω–¥–∞ —Å–±—Ä–æ—à–µ–Ω–∞')
                else:
                    if place == 'content':
                        item_opts[key] = message.content
                    else:
                        item_opts[key] = message.role_mentions
                    return item_opts
        
        
        
        name = False
        
        while name is False:
            item_opts = await get(item_opts, 'name', 'content')
            items = await db.fetch_user(ctx.guild.id, ctx.guild.id, items=1)
            items = items['items']
            unicle = True
            for i in items:
                if i['name'] == item_opts['name']:
                    unicle = False
                    embed.set_footer(text='–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º | `–æ—Ç–º–µ–Ω–∏—Ç—å` –¥–ª—è –æ—Ç–º–µ–Ω—ã')
            if unicle:
                embed.title = item_opts['name']
                embed.set_footer(text='–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ | `–æ—Ç–º–µ–Ω–∏—Ç—å` –¥–ª—è –æ—Ç–º–µ–Ω—ã')
                name = True
            await main.edit(embed=embed)
                
        
        cost = False
        while cost is False:
            item_opts = await get(item_opts, 'cost', 'content')
            try:
                item_opts['cost'] = int(item_opts['cost'])
            except ValueError:
                embed.set_footer(text='–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ [—á–∏—Å–ª–æ] | `–æ—Ç–º–µ–Ω–∏—Ç—å` –¥–ª—è –æ—Ç–º–µ–Ω—ã')
                await main.edit(embed=embed)
            else:
                cost = True
        
        embed.add_field(name='–¶–µ–Ω–∞', value=item_opts['cost'], inline=False)
        embed.set_footer(text='–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ | `–æ—Ç–º–µ–Ω–∏—Ç—å` –¥–ª—è –æ—Ç–º–µ–Ω—ã')
        await main.edit(embed=embed)
        
        item_opts = await get(item_opts, 'description', 'content')
        embed.add_field(name='–û–ø–∏—Å–∞–Ω–∏–µ', value=item_opts['description'], inline=False)
        embed.set_footer(text='–í–≤–µ–¥–∏—Ç–µ —Ä–æ–ª—å, –≤—ã–¥–∞–≤–∞–µ–º—É—é –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ | –±–µ–∑ @role - –±–µ–∑ —Ä–æ–ª–∏ | `–æ—Ç–º–µ–Ω–∏—Ç—å` –¥–ª—è –æ—Ç–º–µ–Ω—ã')
        await main.edit(embed=embed)
        
        item_opts = await get(item_opts, 'roles', 'roles')
        if item_opts['roles']:
            embed.add_field(name='–†–æ–ª–∏', value=' '.join([role.mention for role in item_opts['roles']]), inline=False)
        else:
            embed.add_field(name='–†–æ–ª–∏', value='–ù–µ—Ç', inline=False)
        embed.set_footer(text='–¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω!')
        await main.edit(embed=embed)
        
        n = []
        
        for role in item_opts['roles']:
            n.append(role.id)
        
        item_opts['roles'] = n
        
        await db.update_user(ctx.guild.id, ctx.guild.id, {'$push': {'items': item_opts}})


    @command(
        usage="`=remove_item [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞]`",
        help="–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ –≥–∏–ª—å–¥–∏–∏",
        brief='administrator'
    )
    @guild_only()
    @has_permissions(administrator=True)
    async def remove_item(self, ctx, *, name):
        await on_command(self.Bot.get_command('remove_item'))
        if not name:
            embed = Embed(title='–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω', color=Colour.dark_theme())
        else:
            items = await db.fetch_user(ctx.guild.id, ctx.guild.id, items=1)
            items = items['items']
            match = False
            for i in items:
                if i['name'] == name:
                    match = True
                    break
            if match:
                embed = Embed(title='–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω', color=Colour.dark_theme())
                await db.update_user(ctx.guild.id, ctx.guild.id, {'$pull': {'items': {'name': name}}})
            else:
                embed = Embed(title='–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω', color=Colour.dark_theme())
        await ctx.send(embed=embed)



    @command(
        usage="`=reset [exp | money | messages | games | user | shop]`",
        help="–°–±—Ä–æ—Å –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≥–∏–ª—å–¥–∏–∏ (exp | money | messages | games), –º–∞–≥–∞–∑–∏–Ω–∞ (shop), –∏–ª–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (user)",
        brief='administrator'
    )
    @guild_only()
    @has_permissions(administrator=True)
    async def reset(self, ctx, *, object):
        await on_command(self.Bot.get_command('reset'))
        embed = Embed(color=Colour.dark_theme())
        if object == 'shop':
            await db.update_user(ctx.guild.id, ctx.guild.id, {'$set': {'items': []}})
            embed.title = '–ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω—É–ª—ë–Ω'
        elif object == 'exp':
            await db.update_guild(ctx.guild.id, {'_id': {'$ne': ctx.guild.id}}, {'$set': {'exp': 0, 'level': 1}})
            embed.title = '—É—Ä–æ–≤–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω—É–ª–µ–Ω—ã'
        elif object == 'money':
            await db.update_guild(ctx.guild.id, {'_id': {'$ne': ctx.guild.id}},  {'$set': {'money': 1000}})
            embed.title = '–¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω—É–ª–µ–Ω—ã'
        elif object == 'messages':
            await db.update_guild(ctx.guild.id, {'_id': {'$ne': ctx.guild.id}}, {'$set': {'messages': 0}})
            embed.title = '—Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω—É–ª–µ–Ω—ã'
        elif object == 'games':
            await db.update_guild(ctx.guild.id, {'_id': {'$ne': ctx.guild.id}}, {'$set': {'games': 0}})
            embed.title = '–∏–≥—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω—É–ª–µ–Ω—ã'
        elif object == 'user':
            await db.update_guild(ctx.guild.id, {'_id': {'$ne': ctx.guild.id}}, {'$set': {'exp': 0, 'level': 1, 'money': 1000, 'messages': 0, 'games': 0}})
            embed.title = '–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±–Ω—É–ª–µ–Ω—ã'
        
        else:
            embed.title = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä'
        
        await ctx.send(embed=embed)
    
    
    @command(
        usage="`=inventory`",
        help="–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–º–µ—Ç—ã"
    )
    @guild_only()
    async def inventory(self, ctx, subcommand=None, *, param=None):
        await on_command(self.Bot.get_command('inventory'))
        items = await db.fetch_user(ctx.guild.id, ctx.author.id, inventory=1)
        items = items['inventory']
        embed = Embed(color=Colour.dark_theme())
        if not items:
            embed.title = "–í –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤"
        else:
            if not subcommand:

                l = len(items)
                
                embeds = [Embed(title='–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å', color=Colour.dark_theme()) for i in range(ceil(l / 5))]
                
                for i in range(l):
                    embeds[i // 5].add_field(name = 'üí∏ ' + str(items[i]['cost']) + '$   |  ' + items[i]['name'], value=items[i]['description'], inline=False)

                c_id = str(ctx.message.id)

                p = Paginator(DiscordComponents(self.Bot), ctx.channel, embeds, author=ctx.author, id=c_id + "pagi")
                response, inter, msg = await p.start()
                if response == "–û—Ç–º–µ–Ω–∏—Ç—å":
                    await msg.delete()
                    return
                response = response.split('|')[1].rsplit()[0]

                items = await db.fetch_user(ctx.guild.id, ctx.author.id, inventory=1)
                items = items['inventory']
                match = False
                print(response)
                for i in items:
                    if i['name'] == response:
                        match = True
                        break
                if match:
                    embed = Embed(title=i['name'], color=Colour.dark_theme())
                    embed.add_field(name='–¶–µ–Ω–∞', value=f"{i['cost']}$", inline=False)
                    embed.add_field(name='–û–ø–∏—Å–∞–Ω–∏–µ', value=i['description'], inline=False)
                    roles = [ctx.guild.get_role(role) for role in i['roles']]
                    if not roles:
                        embed.add_field(name='–†–æ–ª–∏', value='–Ω–µ—Ç', inline=False)
                    else:
                        embed.add_field(name='–†–æ–ª–∏', value=' '.join([role.mention for role in roles]), inline=False)
                    await inter.edit_origin(embed=embed, components=[
                        component.Button(style=component.ButtonStyle.blue, label="–ü—Ä–æ–¥–∞—Ç—å", custom_id=c_id + "sell"),
                        component.Button(style=component.ButtonStyle.blue, label="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å", custom_id=c_id + "use_")
                        ])
                    interaction = await self.Bot.wait_for("button_click", check = lambda i: i.user == ctx.author)
                    
                    embed = Embed(color=Colour.dark_theme())
                    
                    if interaction.custom_id == c_id + 'sell':
                        cost = ceil(i['cost'] * 0.5)
                        embed.title = f"–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω –∑–∞ {cost}$"
                        await db.update_user(ctx.guild.id, ctx.author.id, {'$pull': {'inventory': {'name': i['name']}}, '$inc': {'money': cost}})
                    else:
                        if not i['roles']:
                            embed.title = "–¢–æ–≤–∞—Ä –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"
                        else:
                            roles = [ctx.guild.get_role(role) for role in i['roles']]
                            try:
                                print(roles)
                                await ctx.author.add_roles(*roles)
                            except Exception as E:
                                print(E)
                                embed.title = "–†–æ–ª—å –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞, –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤—ã—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏"
                                embed.description = "–ß—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å, –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∏–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–æ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞, —á–µ–º —Ä–æ–ª—å –±–æ—Ç–∞"
                            else:
                                embed.title = "–¢–æ–≤–∞—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω"
                                await db.update_user(ctx.guild.id, ctx.author.id, {'$pull': {'inventory': {'name': i['name']}}})
                    await interaction.edit_origin(embed=embed, components=[])
                    
                else:
                    embed = Embed(title='–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω', color=Colour.dark_theme())
                    await ctx.reply(embed=embed)

def setup(Bot):
    Bot.add_cog(Shop(Bot))
